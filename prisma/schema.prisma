generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model tblusers {
  id          Int       @id @default(autoincrement())
  user_id     Int
  username    String    @db.VarChar(50)
  password    String    @db.VarChar(255)
  email       String    @unique @db.VarChar(100)
  created_at  DateTime? @default(now()) @db.Timestamp(6)
  last_login  DateTime? @db.Timestamp(6)
  is_verified Boolean?  @default(true)
}

model strategies {
  strategyid          String   @db.VarChar(255)
  strategyname        String   @db.VarChar(100)
  total_portfolio_nav Decimal  @db.Decimal(15, 2)
  nifty               Decimal  @db.Decimal(15, 2)
  date                DateTime @db.Date
  id                  Int      @id @default(autoincrement())
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model blog_posts {
  id               Int            @id @default(autoincrement())
  title            String         @db.VarChar(255)
  slug             String         @unique @db.VarChar(255)
  content          Json
  excerpt          String?
  author_id        Int
  status           String         @db.VarChar(20)
  published_at     DateTime?      @db.Timestamptz(6)
  blog_strategy_id Int?
  created_at       DateTime?      @default(now()) @db.Timestamptz(6)
  updated_at       DateTime?      @default(now()) @db.Timestamptz(6)
  read_time        Int?
  tblstrategies    tblstrategies? @relation(fields: [blog_strategy_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model migrations_lock {
  lock_key    String    @id @db.VarChar(191)
  locked      Boolean?  @default(false)
  acquired_at DateTime? @db.Timestamptz(6)
  released_at DateTime? @db.Timestamptz(6)
}

model tblstrategies {
  id          Int          @id @default(autoincrement())
  name        String       @unique @db.VarChar(50)
  slug        String       @unique @db.VarChar(50)
  description String?
  created_at  DateTime?    @default(now()) @db.Timestamptz(6)
  updated_at  DateTime?    @default(now()) @db.Timestamptz(6)
  blog_posts  blog_posts[]
}
